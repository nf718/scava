# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


# Admin
GET     /admin                 		controllers.Admin.index()
GET		/admin/requests				controllers.Admin.requests()
GET		/admin/requests/offer		controllers.Admin.offerInvite(email:String)
GET		/admin/requests/delete		controllers.Admin.deleteInvite(email:String)
GET     /admin/mailinglist          controllers.Admin.viewMailingList()
GET     /admin/users                controllers.Users.users()
GET     /admin/users/:id            controllers.Users.view(id:String)
GET     /admin/users/:id/delete     controllers.Users.delete_confirmation(id: String)
POST   	/admin/users/:id/delete     controllers.Users.delete(id: String)
GET 	/admin/users/:id/usage		controllers.Admin.getUsagePlot(id : String)
GET 	/admin/usage/plot			controllers.Admin.getPageViewPlot(type : String)
GET 	/admin/usage/table			controllers.Admin.getPageViewStats()
GET 	/admin/status 				controllers.Admin.status()
GET 	/admin/errors 				controllers.Admin.errors()
GET 	/admin/errors/webapp		controllers.Admin.getWebAppErrors()
GET 	/admin/permission/grant		controllers.Admin.makeAdmin(email : String)
GET 	/admin/permission/revoke	controllers.Admin.revokeAdmin(email : String)
GET 	/admin/qualitymodels 		controllers.Admin.qualityModels()
GET 	/admin/qualitymodels/edit 	controllers.Admin.editQualityModel(id : String)
POST 	/admin/qualitymodels/save 	controllers.Admin.saveQualityModel(id : String)
GET 	/admin/api/*path			controllers.Admin.adminApi(path : String)
GET     /assets/javascripts/adminroutes    controllers.Admin.jsRoutes


# News
GET 	/news 						controllers.News.index()
GET 	/news/						controllers.News.index()
GET 	/admin/news 				controllers.News.adminIndex()
GET 	/admin/news/ 				controllers.News.adminIndex()
POST 	/admin/news/new 			controllers.News.createItem()
GET 	/admin/news/delete/:id 			controllers.News.deleteItem(id : String)
GET 	/admin/news/update/:id/:status 			controllers.News.changeStatus(id : String, status : String)

# Invite Acceptance
GET		/register					controllers.Invitation.acceptInvitation(key : String)

# Client API proxy
GET		/api/*path					controllers.Application.api(path : String)

# Search
GET 	/search 					controllers.Application.search(q : String ?= "")
GET		/autocomplete				controllers.Application.autocomplete(query : String, analysedOnly : Boolean)

# Home page
GET     /                           controllers.Application.index
GET     /index.html                 controllers.Application.index
GET     /assets/javascripts/routes    controllers.Application.jsRoutes

# Demo
GET		/demo 						controllers.DemoApplication.index
GET		/demo/						controllers.DemoApplication.index
POST	/demo/mailingList			controllers.DemoApplication.addToMailingList
GET		/demo/compare 				controllers.DemoApplication.compare	
GET		/demo/compare/ 				controllers.DemoApplication.compare
GET		/demo/projects/:id 			controllers.DemoApplication.viewProject(id : String, summary : Boolean = true)
GET		/demo/projects/:id/ 		controllers.DemoApplication.viewProject(id : String, summary : Boolean = true)
GET		/demo/projects/:id/summary 	controllers.DemoApplication.viewProject(id : String, summary : Boolean = true)
GET		/demo/projects/:id/summary/ controllers.DemoApplication.viewProject(id : String, summary : Boolean = true)
GET		/demo/projects/:id/detail	controllers.DemoApplication.viewProject(id : String, summary : Boolean = false)
GET		/demo/projects/:id/detail/ 	controllers.DemoApplication.viewProject(id : String, summary : Boolean = false)

# User Profile
GET     /profile                    controllers.Application.profile
GET     /profile/qualitymodel       controllers.Account.editQualityModel
POST     /profile/qualitymodel       controllers.Account.saveQualityModel
POST     /profile/qualitymodelselection       controllers.Account.updateQualityModelSelection(id : String)
GET		/profile/notification		controllers.Application.profileNotification(projectid: String, projectName : String, metricid : String, metricName : String)
POST	/profile/notification		controllers.Account.createNotification
GET	/profile/grid/delete/:id	controllers.Account.deleteGridObject(id:String)
GET		/profile/eventgroup			controllers.Account.loadEventGroupForm
GET		/profile/eventgroup/:id		controllers.Account.editEventGroup(id : String)
POST	/profile/eventgroup			controllers.Account.createEventGroup
GET		/profile/event				controllers.Application.profileEvent
POST	/profile/event				controllers.Account.createEvent
POST    /profile/spark              controllers.Account.watchSpark(projectid:String, metricid:String, projectName:String, metricName:String)
POST    /profile/updategrid         controllers.Account.updateGridLocations(loc : String)
POST 	/project/star 				controllers.Account.starProject(projectId : String)
POST 	/project/unstar 				controllers.Account.unstarProject(projectId : String)


# User accounts login/auth routes
GET     /login                      controllers.Application.login
POST    /login                      controllers.Application.doLogin

GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

# Standard signup currently disabled
#GET     /signup                	controllers.Application.signup()
#GET     /signup/                	controllers.Application.signup()
POST    /signup                    controllers.Application.doSignup

GET     /accounts/unverified        controllers.Signup.unverified
GET     /authenticate/:provider/denied     controllers.Signup.oAuthDenied(provider: String)

GET     /accounts/verify/:token     controllers.Signup.verify(token: String)
GET     /accounts/exists            controllers.Signup.exists

GET     /accounts/password/reset/:token     controllers.Signup.resetPassword(token: String)
POST    /accounts/password/reset            controllers.Signup.doResetPassword

GET    /accounts/password/change    controllers.Account.changePassword
POST   /accounts/password/change    controllers.Account.doChangePassword

GET     /accounts/verify            controllers.Account.verifyEmail

GET     /accounts/add               controllers.Account.link

GET     /accounts/link              controllers.Account.askLink
POST    /accounts/link              controllers.Account.doLink

GET     /accounts/merge             controllers.Account.askMerge
POST    /accounts/merge             controllers.Account.doMerge

GET     /login/password/forgot     	controllers.Signup.forgotPassword(email: String ?= "")
POST    /login/password/forgot     	controllers.Signup.doForgotPassword

# Delete
# GET    /accounts/:id/delete        	controllers.Users.delete_confirmation(id: Long)
# POST   /accounts/:id/delete        	controllers.Users.delete(id: Long)

## Projects
# List
GET     /projects                  	controllers.Projects.projects()
# Create
GET     /projects/new               controllers.Projects.create()
#POST    /projects/new               controllers.Projects.save()
GET     /projects/add               controllers.Projects.createProject()
POST    /projects/add               controllers.Projects.postCreateProject()
#GET     /javascriptRoutes     		controllers.Projects.javascriptRoutes
# Import
POST    /projects/import            controllers.Projects.importProject()

# Read/View
GET		/projects/:id				controllers.Projects.view(id:String)
GET		/projects/:id/				controllers.Projects.view(id:String)
GET		/projects/:id/summary		controllers.Projects.view(id:String)
GET		/projects/:id/summary/		controllers.Projects.view(id:String)
GET		/projects/:id/detail		controllers.Projects.viewDetail(id:String)
GET		/projects/:id/detail/		controllers.Projects.viewDetail(id:String)

# Update/Edit
# GET 	/projects/:id/edit 			controllers.Projects.edit(id:Long)
# POST 	/projects/:id/edit  		controllers.Projects.update(id:Long)
# Delete
# GET    /projects/:id/delete        	controllers.Projects.delete_confirmation(id: Long)
# POST   /projects/:id/delete        	controllers.Projects.delete(id: Long)

## Compare
GET 	/compare 					controllers.Application.compare()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

#Invitations
GET /invitation                 controllers.Invitation.requestInvitation
POST /invitation 			    controllers.Invitation.submitInvitationRequest
